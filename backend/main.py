from telebot import *
import urllib.parse
from flask import Flask, request, jsonify
from flask_cors import CORS
from dotenv import load_dotenv
import os

load_dotenv()

last_users = []
points = {}
referrals = {}

class Bot(object):
    def __init__(self):
        self.bot = TeleBot(token=os.getenv("TOKEN"))
        self._register_handler()

        self.app = Flask(__name__)
        CORS(self.app)

        self._register_apis()

        import threading
        threading.Thread(target=lambda: self.app.run(port=5000, debug=True, use_reloader=False)).start()
        
    def _register_handler(self):
        self.bot.register_message_handler(self.handle_start , commands=['start'])
        self.bot.register_callback_query_handler(self.show_user_profile, func=lambda callback: callback.data == 'user')
        self.bot.register_callback_query_handler(self.referal_url, func=lambda callback: callback.data == 'referal')
        
    def _register_apis(self):
        self.app.route("/last_users", methods=['GET'])(self.get_last_user)
        
    def get_last_user(self):
        if last_users:
            return jsonify(last_users[-1])
        return jsonify({})
        
    def handle_start(self, message):
        args = message.text.split()
        user_id = message.from_user.id
        username = message.from_user.username
        
        last_users.append({"user_id": user_id, "username": username})
        self.bot.send_message(message.chat.id, "qe123")
        
        if user_id not in points:
            self.points[user_id] = 0
        
        if len(args) > 1:
            referrer_id = int(args[1])
            if referrer_id != user_id:
                points[referrer_id] = points.get(referrer_id, 0) + 50
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–∏—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ {referrer_id}. –ë–∞–ª–ª—ã {referrer_id} = {points[referrer_id]}")
        
        self.show_menu(message)
        
    def show_menu(self, message):
        keyboard = types.InlineKeyboardMarkup()
        button_about_user = types.InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å", callback_data="user")
        button_referal = types.InlineKeyboardButton(text="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="referal")
        
        keyboard.add(button_about_user, button_referal, row_width=1)
        self.bot.send_message(
            message.chat.id,
            text=(
                "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
                "–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ **SuperShop** üéÅ\n\n"
                "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
                "üí∞ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Å–∫–æ–ª—å–∫–æ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ —Ç—ã —É–∂–µ –Ω–∞–∫–æ–ø–∏–ª\n"
                "ü§ù –°–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é *—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É* –∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –µ—é —Å –¥—Ä—É–∑—å—è–º–∏\n\n"
                "–í–º–µ—Å—Ç–µ –∫–æ–ø–∏—Ç—å –±–∞–ª–ª—ã –≤–µ—Å–µ–ª–µ–µ –∏ –≤—ã–≥–æ–¥–Ω–µ–µ! üöÄ",
            ),
            parse_mode="Markdown",
            reply_markup=keyboard
        )
        
    def show_user_profile(self, callback):
        user_id = callback.from_user.id
        username = callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        points = 125
        
        text = (
            f"üë§ *–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            f"–ò–º—è: {username}\n"
            f"ID: `{user_id}`\n"
            f"üíé –ë–∞–ª–ª—ã: <b>{points}</b>\n\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –¥–µ–ª–∞–π –ø–æ–∫—É–ø–∏, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å! üöÄ"
        )
        
        self.bot.send_message(callback.message.chat.id, text, parse_mode="HTML")
        
    def referal_url(self, callback):
        user_id = callback.from_user.id
        
        if user_id not in referrals:
            base_url = "https://t.me/referalApi_bot?start="
            encoded_ref = urllib.parse.quote_plus(str(user_id))
            referral_link = f"{base_url}{encoded_ref}"
            referrals[user_id] = referral_link
        else:
            referral_link = referrals[user_id]
        
        text = (
            "üîó <b>–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n\n"
            "–û—Ç–ø—Ä–∞–≤—å –µ—ë –¥—Ä—É–∑—å—è–º ‚Äî –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã, –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—Å—è –∏ –±—É–¥—É—Ç –¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫–∏!\n\n"
            f"üëâ <a href='#'>{referral_link}</a>"
        )
        
        print(referral_link, user_id)
        self.bot.send_message(callback.message.chat.id, text, parse_mode="HTML")
        
    def start_bot(self):
        self.bot.infinity_polling()
        

if __name__ == "__main__":
    import threading
    bot = Bot()
    threading.Thread(target=bot.start_bot).start()